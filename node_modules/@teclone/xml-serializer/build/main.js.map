{"version":3,"file":"main.js","sources":["../src/main.js"],"sourcesContent":["import Serializer from './modules/Serializer.js';\n\nclass XMLSerializer {\n  /**\n   *@param {boolean} [preserveWhiteSpace=true] - boolean value indicating if white spaces\n   * should be preserved as it is in the source\n   */\n  constructor(preserveWhiteSpace) {\n    this.serializer = new Serializer(preserveWhiteSpace);\n  }\n\n  /**\n   * return XMLSerializer as modules name\n   */\n  get [Symbol.toStringTag]() {\n    return 'XMLSerializer';\n  }\n\n  /**\n   * produces an XML serialization of root passing a value of false for the\n   * require well-formed parameter, and return the result.\n   *@param {Node} root - the root node\n   *@param {boolean} [requireWellFormed=false] - boolean value indicating if it should require xml\n   * well formedness\n   *@returns {string}\n   */\n  serializeToString(root, requireWellFormed) {\n    return this.serializer.serializeToString(root, requireWellFormed);\n  }\n}\n\n/**\n * installs the serialize to the given target object\n */\nXMLSerializer.installTo = target => {\n  target.XMLSerializer = XMLSerializer;\n};\n\nexport default XMLSerializer;\n"],"names":["XMLSerializer","preserveWhiteSpace","serializer","Serializer","root","requireWellFormed","serializeToString","Symbol","toStringTag","installTo","target"],"mappings":";;;;;;;;IAEMA;;;;;yBAKQC,kBAAZ,EAAgC;;;SACzBC,UAAL,GAAkB,IAAIC,UAAJ,CAAeF,kBAAf,CAAlB;;;;;;;;;;;;;;;;;;sCAkBgBG,MAAMC,mBAAmB;aAClC,KAAKH,UAAL,CAAgBI,iBAAhB,CAAkCF,IAAlC,EAAwCC,iBAAxC,CAAP;;;SAbGE,MAAM,CAACC;wBAAe;aAClB,eAAP;;;;;;;;;;;AAmBJR,aAAa,CAACS,SAAd,GAA0B,UAAAC,MAAM,EAAI;EAClCA,MAAM,CAACV,aAAP,GAAuBA,aAAvB;CADF;;;;"}